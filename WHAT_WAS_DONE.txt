Проект TradeWise: Telegram-бот для торговли акциями через Tinkoff Invest API

1. Структура проекта:
- tinkoff_api/: асинхронные обёртки над Tinkoff Invest API (client, accounts, orders, instruments, historical, utils, service)
- handlers/: Telegram-хэндлеры команд и диалогов (common, portfolio, quotes, backtest, strategy)
- db/: асинхронные модели SQLAlchemy, инициализация базы
- strategies/: ядро и примеры торговых стратегий (MA)
- utils/: декораторы, форматтеры, генерация мок-данных
- setup_project.py: автоматизация создания окружения и установки зависимостей
- config.py: загрузка и валидация конфигурации из .env
- main.py: точка запуска Telegram-бота

2. Основные команды Telegram-бота:
/start — приветствие и список команд
/portfolio — показать портфель пользователя
/quotes — список инструментов
/backtest — запуск бэктеста стратегии
/strategy — выбор и настройка стратегии

3. Модели БД:
- User: Telegram-пользователь
- OrderHistory: история ордеров
- BacktestResult: результаты бэктестинга

4. Заглушки сервисов:
- Мок-данные для исторических свечей (utils/mocks.py)
- Примеры стратегий (strategies/ma.py)
- Форматтеры и декораторы

5. Тесты:
- Структура и заглушки для unit-тестов (можно расширять под pytest)

6. README и Dockerfile:
- Необходимо добавить подробное описание и инструкции по запуску, а также Dockerfile для контейнеризации (структура проекта полностью готова для этого)

7. Готово для запуска и дальнейшей доработки:
- Вся архитектура построена на асинхронных вызовах
- Поддержка песочницы и реального режима
- Легко расширяется новыми стратегиями и сервисами
- Поддержка визуализации и хранения результатов

Дальнейшие шаги:
- Заполнить .env своими токенами
- (Опционально) добавить README.md и Dockerfile
- Запустить setup_project.py для установки окружения
- Запустить main.py для старта Telegram-бота
